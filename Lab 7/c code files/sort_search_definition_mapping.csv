DefID,Variable,Node,Statement
D1,choice,1,"int n, choice = -1, i, j, temp, key, k, repeat ;"
D2,arr[i],11,arr[i] = rand() % 1000 ;
D3,choice,16,choice = -1 ;
D4,temp,26,temp = arr[j] ;
D5,arr[j],26,arr[j] = arr[j + 1] ;
D6,temp,34,temp = arr[i] ;
D7,j,34,j = i - 1 ;
D8,left,45,left = i ;
D9,mid,45,mid = i + width - 1 ;
D10,right,45,right = i + 2 * width - 1 ;
D11,mid,47,mid = n - 1 ;
D12,right,50,right = n - 1 ;
D13,l,51,l = left ;
D14,r,51,r = mid + 1 ;
D15,j,51,j = left ;
D16,temp_arr[j++],55,temp_arr[j++] = arr[l++] ;
D17,temp_arr[j++],58,temp_arr[j++] = arr[r++] ;
D18,temp_arr[j++],62,temp_arr[j++] = arr[l++] ;
D19,temp_arr[j++],65,temp_arr[j++] = arr[r++] ;
D20,arr[j],68,arr[j] = temp_arr[j] ;
D21,top,74,"int stack[100], top = -1, low, high, pivot, p ;"
D22,stack[++top],74,stack[++top] = 0 ;
D23,stack[++top],74,stack[++top] = n - 1 ;
D24,high,76,high = stack[top--] ;
D25,low,76,low = stack[top--] ;
D26,pivot,76,pivot = arr[high] ;
D27,i,76,i = low - 1 ;
D28,temp,80,temp = arr[i] ;
D29,arr[i],80,arr[i] = arr[j] ;
D30,arr[j],80,arr[j] = temp ;
D31,temp,82,temp = arr[i + 1] ;
D32,arr[high],82,arr[high] = temp ;
D33,p,82,p = i + 1 ;
D34,stack[++top],84,stack[++top] = low ;
D35,stack[++top],84,stack[++top] = p - 1 ;
D36,stack[++top],87,stack[++top] = p + 1 ;
D37,stack[++top],87,stack[++top] = high ;
D38,found,92,int found = 0 ;
D39,found,96,found = 1 ;
D40,left,109,"int left = 0, right = n - 1, found = 0, mid ;"
D41,mid,111,mid = (left + right) / 2 ;
D42,found,113,found = 1 ;
D43,left,118,left = mid + 1 ;
D44,right,121,right = mid - 1 ;
D45,inv,138,int inv = 0 ;
D46,temp_arr[i],152,temp_arr[i] = arr[i] ;
D47,temp,159,temp = temp_arr[j] ;
D48,temp_arr[j],159,temp_arr[j] = temp_arr[j + 1] ;
D49,temp,173,temp = arr[i] ;
D50,arr[i],173,arr[i] = arr[n - i - 1] ;
D51,j,179,j = rand() % (i + 1) ;
D52,temp,179,temp = arr[i] ;
D53,arr[i],179,arr[i] = arr[j] ;
D54,arr[j],179,arr[j] = temp ;
D55,sum,191,"int sum = 0, min = arr[0], max = arr[0] ;"
D56,min,195,min = arr[i] ;
D57,max,198,max = arr[i] ;
