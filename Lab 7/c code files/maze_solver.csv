ID,type,statement_count,statements,sequential_edges,true_edges,false_edges,back_edges,break_edges
0,sequential,1,Entry,1,,,,
1,sequential,12,"const int MAXR = 40, MAXC = 40 ; | int rows = 24, cols = 24 ; | char maze[MAXR][MAXC] ; | int visited[MAXR][MAXC] ; | int parentR[MAXR][MAXC], parentC[MAXR][MAXC] ; | int i, j, k ; | int startR = 1, startC = 1 ; | int endR = 22, endC = 22 ; | int choice, sub ; | int trace = 0 ; | int seedChoice ; | srand((unsigned)time(NULL)) ;",2,,,,
2,loop check,1,for (i = 0 ;i < rows ;i++),,3,,,
3,sequential,0,,4,,,,
4,loop check,1,for (j = 0 ;j < cols ;j++),,5,,,
5,sequential,0,,6,,,,
6,conditional check,1,if (i == 0 || j == 0 || i == rows - 1 || j == cols - 1),,7,8,,
7,sequential,1,maze[i][j] = '#' ;,8,,,,
8,sequential,0,,9,,,,
9,else branch,1,else,10,,,,
10,sequential,2,maze[i][j] = ((rand() % 100) < 30) ? '#' : | '.' ;,11,,,,
11,sequential,3,visited[i][j] = 0 ; | parentR[i][j] = -1 ; | parentC[i][j] = -1 ;,12,,,4,
12,sequential,0,,13,,,2,
13,sequential,2,maze[startR][startC] = 'S' ; | maze[endR][endC] = 'E' ;,14,,,,
14,loop check,1,while (1),,15,,,
15,sequential,3,"printf(""\nMaze %d x %d S=(%d,%d) E=(%d,%d) trace=%s\n"", rows, cols, startR, startC, endR, endC, trace ? ""ON"":""OFF"") ; | printf(""1 Print 2 Trace toggle 3 Regenerate 4 Edit 5 DFS 6 BFS 7 A* 8 Stats 9 Resize 0 Exit\n"") ; | printf(""Choose: "") ;",16,,,,
16,conditional check,1,"if (scanf(""%d"", &choice) != 1)",,17,23,,
17,sequential,1,int ch ;,18,,,,
18,loop check,1,while ((ch=getchar())!=EOF && ch!='\n'),,19,,,
19,sequential,1,;,20,,,18,
20,sequential,1,"printf(""Bad input\n"") ;",21,,,,
21,sequential,1,continue ;,,,,14,
22,sequential,0,,23,,,,
23,sequential,0,,24,,,,
24,conditional check,1,if (choice == 0),,25,28,,
25,sequential,1,"printf(""Exit\n"") ;",26,,,,
26,sequential,1,break ;,,,,,184
27,sequential,0,,28,,,,
28,sequential,0,,29,,,,
29,conditional check,1,if (choice == 1),,30,42,,
30,sequential,1,"printf("" "") ;",31,,,,
31,loop check,1,for (j = 0 ;j < cols ;j++),,32,,,
32,sequential,1,"printf(""%c"", '0' + (j % 10)) ;",33,,,31,
33,sequential,1,"printf(""\n"") ;",34,,,,
34,loop check,1,for (i = 0 ;i < rows ;i++),,35,,,
35,sequential,1,"printf(""%2d "", i) ;",36,,,,
36,loop check,1,for (j = 0 ;j < cols ;j++),,37,,,
37,sequential,1,"printf(""%c"", maze[i][j]) ;",38,,,36,
38,sequential,1,"printf(""\n"") ;",39,,,34,
39,sequential,0,,40,,,,
40,sequential,1,continue ;,,,,14,
41,sequential,0,,42,,,,
42,sequential,0,,43,,,,
43,conditional check,1,if (choice == 2),,44,47,,
44,sequential,2,"trace = !trace ; | printf(""Trace %s\n"", trace ? ""ON"":""OFF"") ;",45,,,,
45,sequential,1,continue ;,,,,14,
46,sequential,0,,47,,,,
47,sequential,0,,48,,,,
48,conditional check,1,if (choice == 3),,49,73,,
49,sequential,1,"printf(""Seed: 1=random 2=enter int: "") ;",50,,,,
50,conditional check,1,"if (scanf(""%d"", &seedChoice) != 1)",,51,52,,
51,sequential,1,seedChoice = 1 ;,52,,,,
52,sequential,0,,53,,,,
53,conditional check,1,if (seedChoice == 2),,54,55,,
54,sequential,3,"int s ; | scanf(""%d"", &s) ; | srand((unsigned)s) ;",55,,,,
55,sequential,0,,56,,,,
56,else branch,1,else,57,,,,
57,sequential,1,srand((unsigned)time(NULL) ^ rand()) ;,58,,,,
58,sequential,0,,59,,,,
59,loop check,1,for (i = 0 ;i < rows ;i++),,60,,,
60,sequential,0,,61,,,,
61,loop check,1,for (j = 0 ;j < cols ;j++),,62,,,
62,sequential,0,,63,,,,
63,conditional check,1,if (i==0||j==0||i==rows-1||j==cols-1),,64,65,,
64,sequential,1,maze[i][j]='#' ;,65,,,,
65,sequential,0,,66,,,,
66,else branch,1,else,67,,,,
67,sequential,2,maze[i][j] = ((rand()%100) < 35) ? '#' : | '.' ;,68,,,,
68,sequential,3,visited[i][j]=0 ; | parentR[i][j]=-1 ; | parentC[i][j]=-1 ;,69,,,61,
69,sequential,0,,70,,,59,
70,sequential,3,"maze[startR][startC]='S' ; | maze[endR][endC]='E' ; | printf(""Regenerated\n"") ;",71,,,,
71,sequential,1,continue ;,,,,14,
72,sequential,0,,73,,,,
73,sequential,0,,74,,,,
74,conditional check,1,if (choice == 4),,75,142,,
75,sequential,1,"printf(""Edit menu: 1 toggle cell 2 move S 3 move E 4 clear interior 0 back\n"") ;",76,,,,
76,conditional check,1,"if (scanf(""%d"",&sub)!=1)",,77,78,,
77,sequential,1,sub = 0 ;,78,,,,
78,sequential,0,,79,,,,
79,conditional check,1,if (sub == 0),,80,83,,
80,sequential,0,,81,,,,
81,sequential,1,continue ;,,,,14,
82,sequential,0,,83,,,,
83,sequential,0,,84,,,,
84,conditional check,1,if (sub == 1),,85,101,,
85,sequential,2,"int r,c ; | printf(""r c: "") ;",86,,,,
86,conditional check,1,"if (scanf(""%d %d"",&r,&c)!=2)",,87,90,,
87,sequential,1,"printf(""Bad\n"") ;",88,,,,
88,sequential,1,continue ;,,,,14,
89,sequential,0,,90,,,,
90,sequential,0,,91,,,,
91,conditional check,1,if (r<=0||c<=0||r>=rows-1||c>=cols-1),,92,95,,
92,sequential,1,"printf(""Invalid\n"") ;",93,,,,
93,sequential,1,continue ;,,,,14,
94,sequential,0,,95,,,,
95,sequential,0,,96,,,,
96,conditional check,1,if ((r==startR&&c==startC)||(r==endR&&c==endC)),,97,100,,
97,sequential,1,"printf(""Can't toggle S/E\n"") ;",98,,,,
98,sequential,1,continue ;,,,,14,
99,sequential,0,,100,,,,
100,sequential,3,"maze[r][c] = (maze[r][c]=='#') ? '.' : | '#' ; | printf(""Toggled (%d,%d) -> %c\n"", r, c, maze[r][c]) ;",101,,,,
101,sequential,0,,102,,,,
102,conditional check,1,else if (sub==2),,103,114,,
103,sequential,2,"int nr,nc ; | printf(""new S r c: "") ;",104,,,,
104,conditional check,1,"if (scanf(""%d %d"",&nr,&nc)!=2)",,105,108,,
105,sequential,1,"printf(""Bad\n"") ;",106,,,,
106,sequential,1,continue ;,,,,14,
107,sequential,0,,108,,,,
108,sequential,0,,109,,,,
109,conditional check,1,if (nr<=0||nc<=0||nr>=rows-1||nc>=cols-1),,110,113,,
110,sequential,1,"printf(""Invalid\n"") ;",111,,,,
111,sequential,1,continue ;,,,,14,
112,sequential,0,,113,,,,
113,sequential,5,"maze[startR][startC] = '.' ; | startR=nr ; | startC=nc ; | maze[startR][startC]='S' ; | printf(""Moved S\n"") ;",114,,,,
114,sequential,0,,115,,,,
115,conditional check,1,else if (sub==3),,116,127,,
116,sequential,2,"int nr,nc ; | printf(""new E r c: "") ;",117,,,,
117,conditional check,1,"if (scanf(""%d %d"",&nr,&nc)!=2)",,118,121,,
118,sequential,1,"printf(""Bad\n"") ;",119,,,,
119,sequential,1,continue ;,,,,14,
120,sequential,0,,121,,,,
121,sequential,0,,122,,,,
122,conditional check,1,if (nr<=0||nc<=0||nr>=rows-1||nc>=cols-1),,123,126,,
123,sequential,1,"printf(""Invalid\n"") ;",124,,,,
124,sequential,1,continue ;,,,,14,
125,sequential,0,,126,,,,
126,sequential,5,"maze[endR][endC]='.' ; | endR=nr ; | endC=nc ; | maze[endR][endC]='E' ; | printf(""Moved E\n"") ;",127,,,,
127,sequential,0,,128,,,,
128,conditional check,1,else if (sub==4),,129,136,,
129,sequential,0,,130,,,,
130,loop check,1,for (i=1 ;i<rows-1 ;i++),,131,,,
131,sequential,0,,132,,,,
132,loop check,1,for (j=1 ;j<cols-1 ;j++),,133,,,
133,sequential,1,maze[i][j]='.' ;,134,,,132,
134,sequential,0,,135,,,130,
135,sequential,3,"maze[startR][startC]='S' ; | maze[endR][endC]='E' ; | printf(""Cleared\n"") ;",136,,,,
136,sequential,0,,137,,,,
137,else branch,1,else,138,,,,
138,sequential,1,"printf(""Unknown\n"") ;",139,,,,
139,sequential,0,,140,,,,
140,sequential,1,continue ;,,,,14,
141,sequential,0,,142,,,,
142,sequential,0,,143,,,,
143,conditional check,1,if (choice == 5),,144,162,,
144,sequential,1,"int stackR[10000], stackC[10000], top = -1 ;",145,,,,
145,loop check,1,for (i=0 ;i<rows ;i++),,146,,,
146,sequential,0,,147,,,,
147,loop check,1,for (j=0 ;j<cols ;j++),,148,,,
148,sequential,3,visited[i][j]=0 ; | parentR[i][j]=-1 ; | parentC[i][j]=-1 ;,149,,,147,
149,sequential,0,,150,,,145,
150,sequential,5,"int sr=startR, sc=startC ; | visited[sr][sc]=1 ; | stackR[++top]=sr ; | stackC[top]=sc ; | int found=0, nodes=0 ;",151,,,,
151,loop check,1,while (top>=0),,152,,,
152,sequential,4,int cr = stackR[top] ; | int cc = stackC[top] ; | top-- ; | nodes++ ;,153,,,,
153,conditional check,1,if (trace),,154,155,,
154,sequential,1,"printf(""DFS pop (%d,%d)\n"", cr, cc) ;",155,,,,
155,sequential,0,,156,,,,
156,conditional check,1,if (cr==endR && cc==endC),,157,160,,
157,sequential,1,found=1 ;,158,,,,
158,sequential,1,break ;,,,,,161
159,sequential,0,,160,,,,
160,sequential,3,"int dr[4] = | { | 1,-1,0,0",161,,,151,
161,sequential,4,"; | int dc[4] = | { | 0,0,1,-1",162,,,,
162,sequential,1,;,163,,,,
163,loop check,1,for (k=0 ;k<4 ;k++),,164,,,
164,sequential,1,"int nr = cr + dr[k], nc = cc + dc[k] ;",165,,,,
165,conditional check,1,if (nr<=0||nc<=0||nr>=rows-1||nc>=cols-1),,166,169,,
166,sequential,0,,167,,,,
167,sequential,1,continue ;,,,,163,
168,sequential,0,,169,,,,
169,sequential,0,,170,,,,
170,conditional check,1,if (maze[nr][nc]=='#'),,171,174,,
171,sequential,0,,172,,,,
172,sequential,1,continue ;,,,,163,
173,sequential,0,,174,,,,
174,sequential,0,,175,,,,
175,conditional check,1,if (visited[nr][nc]),,176,179,,
176,sequential,0,,177,,,,
177,sequential,1,continue ;,,,,163,
178,sequential,0,,179,,,,
179,sequential,5,visited[nr][nc]=1 ; | parentR[nr][nc]=cr ; | parentC[nr][nc]=cc ; | stackR[++top]=nr ; | stackC[top]=nc ;,180,,,,
180,conditional check,1,if (trace),,181,182,,
181,sequential,1,"printf("" DFS push (%d,%d)\n"", nr, nc) ;",182,,,,
182,sequential,0,,183,,,163,
183,sequential,0,,184,,,14,
184,sequential,0,,185,,,,
185,conditional check,1,if (found),,186,193,,
186,sequential,1,"int pr=endR, pc=endC, path=0 ;",187,,,,
187,loop check,1,while (!(pr==startR && pc==startC) && pr!=-1 && pc!=-1),,188,,,
188,sequential,0,,189,,,,
189,conditional check,1,if (maze[pr][pc]=='.'),,190,191,,
190,sequential,1,maze[pr][pc]='*' ;,191,,,,
191,sequential,4,"int tr = parentR[pr][pc], tc = parentC[pr][pc] ; | pr=tr ; | pc=tc ; | path++ ;",192,,,187,
192,sequential,3,"maze[startR][startC]='S' ; | maze[endR][endC]='E' ; | printf(""DFS found path nodes=%d pathlen=%d\n"", nodes, path) ;",193,,,,
193,sequential,0,,194,,,,
194,else branch,1,else,195,,,,
195,sequential,1,"printf(""DFS no path nodes=%d\n"", nodes) ;",196,,,,
196,sequential,0,,197,,,,
197,sequential,1,continue ;,,,,,
198,sequential,1,},199,,,,
199,conditional check,1,if (choice == 6),,200,218,,
200,sequential,1,"int qR[10000], qC[10000], head=0, tail=0 ;",201,,,,
201,loop check,1,for (i=0 ;i<rows ;i++),,202,,,
202,sequential,0,,203,,,,
203,loop check,1,for (j=0 ;j<cols ;j++),,204,,,
204,sequential,3,visited[i][j]=0 ; | parentR[i][j]=-1 ; | parentC[i][j]=-1 ;,205,,,203,
205,sequential,0,,206,,,201,
206,sequential,5,"qR[tail]=startR ; | qC[tail]=startC ; | tail++ ; | visited[startR][startC]=1 ; | int found=0, nodes=0 ;",207,,,,
207,loop check,1,while (head<tail),,208,,,
208,sequential,3,"int cr=qR[head], cc=qC[head] ; | head++ ; | nodes++ ;",209,,,,
209,conditional check,1,if (trace),,210,211,,
210,sequential,1,"printf(""BFS pop (%d,%d)\n"", cr, cc) ;",211,,,,
211,sequential,0,,212,,,,
212,conditional check,1,if (cr==endR && cc==endC),,213,216,,
213,sequential,1,found=1 ;,214,,,,
214,sequential,1,break ;,,,,,217
215,sequential,0,,216,,,,
216,sequential,3,"int dr[4]= | { | 0,0,1,-1",217,,,207,
217,sequential,3,", dc[4]= | { | 1,-1,0,0",218,,,,
218,sequential,1,;,219,,,,
219,loop check,1,for (k=0 ;k<4 ;k++),,220,,,
220,sequential,1,"int nr=cr+dr[k], nc=cc+dc[k] ;",221,,,,
221,conditional check,1,if (nr<=0||nc<=0||nr>=rows-1||nc>=cols-1),,222,225,,
222,sequential,0,,223,,,,
223,sequential,1,continue ;,,,,219,
224,sequential,0,,225,,,,
225,sequential,0,,226,,,,
226,conditional check,1,if (maze[nr][nc]=='#'),,227,230,,
227,sequential,0,,228,,,,
228,sequential,1,continue ;,,,,219,
229,sequential,0,,230,,,,
230,sequential,0,,231,,,,
231,conditional check,1,if (visited[nr][nc]),,232,235,,
232,sequential,0,,233,,,,
233,sequential,1,continue ;,,,,219,
234,sequential,0,,235,,,,
235,sequential,6,visited[nr][nc]=1 ; | parentR[nr][nc]=cr ; | parentC[nr][nc]=cc ; | qR[tail]=nr ; | qC[tail]=nc ; | tail++ ;,236,,,,
236,conditional check,1,if (trace),,237,238,,
237,sequential,1,"printf("" BFS push (%d,%d)\n"", nr, nc) ;",238,,,,
238,sequential,0,,239,,,219,
239,sequential,1,},240,,,,
240,conditional check,1,if (found),,241,248,,
241,sequential,1,"int pr=endR, pc=endC, path=0 ;",242,,,,
242,loop check,1,while (!(pr==startR && pc==startC) && pr!=-1 && pc!=-1),,243,,,
243,sequential,0,,244,,,,
244,conditional check,1,if (maze[pr][pc]=='.'),,245,246,,
245,sequential,1,maze[pr][pc]='+' ;,246,,,,
246,sequential,4,"int tr=parentR[pr][pc], tc=parentC[pr][pc] ; | pr=tr ; | pc=tc ; | path++ ;",247,,,242,
247,sequential,3,"maze[startR][startC]='S' ; | maze[endR][endC]='E' ; | printf(""BFS found path nodes=%d pathlen=%d\n"", nodes, path) ;",248,,,,
248,sequential,0,,249,,,,
249,else branch,1,else,250,,,,
250,sequential,1,"printf(""BFS no path nodes=%d\n"", nodes) ;",251,,,,
251,sequential,0,,252,,,,
252,sequential,1,continue ;,,,,,
253,sequential,1,},254,,,,
254,conditional check,1,if (choice == 7),,255,285,,
255,sequential,0,,256,,,,
256,loop check,1,for (i=0 ;i<rows ;i++),,257,,,
257,sequential,0,,258,,,,
258,loop check,1,for (j=0 ;j<cols ;j++),,259,,,
259,sequential,3,visited[i][j]=0 ; | parentR[i][j]=-1 ; | parentC[i][j]=-1 ;,260,,,258,
260,sequential,0,,261,,,256,
261,sequential,8,"int openR[10000], openC[10000], openG[10000], openF[10000] ; | int openN=0 ; | openR[openN]=startR ; | openC[openN]=startC ; | openG[openN]=0 ; | openF[openN]=abs(startR-endR)+abs(startC-endC) ; | openN++ ; | int closed[MAXR][MAXC] ;",262,,,,
262,loop check,1,for (i=0 ;i<rows ;i++),,263,,,
263,sequential,0,,264,,,,
264,loop check,1,for (j=0 ;j<cols ;j++),,265,,,
265,sequential,1,closed[i][j]=0 ;,266,,,264,
266,sequential,0,,267,,,262,
267,sequential,1,"int found=0, nodes=0 ;",268,,,,
268,loop check,1,while (openN>0),,269,,,
269,sequential,1,int best=0 ;,270,,,,
270,loop check,1,for (i=1 ;i<openN ;i++),,271,,,
271,sequential,0,,272,,,,
272,conditional check,1,if (openF[i]<openF[best]),,273,274,,
273,sequential,1,best=i ;,274,,,,
274,sequential,0,,275,,,270,
275,sequential,6,"int cr=openR[best], cc=openC[best], cg=openG[best] ; | openN-- ; | openR[best]=openR[openN] ; | openC[best]=openC[openN] ; | openG[best]=openG[openN] ; | openF[best]=openF[openN] ;",276,,,,
276,conditional check,1,if (trace),,277,278,,
277,sequential,1,"printf(""A* expand (%d,%d) g=%d\n"", cr, cc, cg) ;",278,,,,
278,sequential,0,,279,,,,
279,conditional check,1,if (cr==endR && cc==endC),,280,283,,
280,sequential,1,found=1 ;,281,,,,
281,sequential,1,break ;,,,,,284
282,sequential,0,,283,,,,
283,sequential,5,"closed[cr][cc]=1 ; | nodes++ ; | int dr[4]= | { | 1,-1,0,0",284,,,268,
284,sequential,3,", dc[4]= | { | 0,0,1,-1",285,,,,
285,sequential,1,;,286,,,,
286,loop check,1,for (k=0 ;k<4 ;k++),,287,,,
287,sequential,1,"int nr=cr+dr[k], nc=cc+dc[k] ;",288,,,,
288,conditional check,1,if (nr<=0||nc<=0||nr>=rows-1||nc>=cols-1),,289,292,,
289,sequential,0,,290,,,,
290,sequential,1,continue ;,,,,286,
291,sequential,0,,292,,,,
292,sequential,0,,293,,,,
293,conditional check,1,if (maze[nr][nc]=='#'),,294,297,,
294,sequential,0,,295,,,,
295,sequential,1,continue ;,,,,286,
296,sequential,0,,297,,,,
297,sequential,0,,298,,,,
298,conditional check,1,if (closed[nr][nc]),,299,302,,
299,sequential,0,,300,,,,
300,sequential,1,continue ;,,,,286,
301,sequential,0,,302,,,,
302,sequential,4,int ng = cg+1 ; | int h = abs(nr-endR)+abs(nc-endC) ; | int nf = ng + h ; | int inOpen=-1 ;,303,,,,
303,loop check,1,for (i=0 ;i<openN ;i++),,304,,,
304,sequential,0,,305,,,,
305,conditional check,1,if (openR[i]==nr && openC[i]==nc),,306,309,,
306,sequential,1,inOpen=i ;,307,,,,
307,sequential,1,break ;,,,,,310
308,sequential,0,,309,,,,
309,sequential,0,,310,,,303,
310,sequential,0,,311,,,,
311,conditional check,1,if (inOpen>=0),,312,316,,
312,sequential,0,,313,,,,
313,conditional check,1,if (ng < openG[inOpen]),,314,315,,
314,sequential,4,openG[inOpen]=ng ; | openF[inOpen]=nf ; | parentR[nr][nc]=cr ; | parentC[nr][nc]=cc ;,315,,,,
315,sequential,0,,316,,,,
316,sequential,0,,317,,,,
317,else branch,1,else,318,,,,
318,sequential,7,openR[openN]=nr ; | openC[openN]=nc ; | openG[openN]=ng ; | openF[openN]=nf ; | parentR[nr][nc]=cr ; | parentC[nr][nc]=cc ; | openN++ ;,319,,,,
319,conditional check,1,if (trace),,320,321,,
320,sequential,1,"printf("" A* add (%d,%d) g=%d f=%d\n"", nr, nc, ng, nf) ;",321,,,,
321,sequential,0,,322,,,,
322,sequential,0,,323,,,286,
323,sequential,1,},324,,,,
324,conditional check,1,if (found),,325,332,,
325,sequential,1,"int pr=endR, pc=endC, path=0 ;",326,,,,
326,loop check,1,while (!(pr==startR && pc==startC) && pr!=-1 && pc!=-1),,327,,,
327,sequential,0,,328,,,,
328,conditional check,1,if (maze[pr][pc]=='.'),,329,330,,
329,sequential,1,maze[pr][pc]='A' ;,330,,,,
330,sequential,4,"int tr=parentR[pr][pc], tc=parentC[pr][pc] ; | pr=tr ; | pc=tc ; | path++ ;",331,,,326,
331,sequential,3,"maze[startR][startC]='S' ; | maze[endR][endC]='E' ; | printf(""A* found path nodes=%d pathlen=%d\n"", nodes, path) ;",332,,,,
332,sequential,0,,333,,,,
333,else branch,1,else,334,,,,
334,sequential,1,"printf(""A* no path nodes=%d\n"", nodes) ;",335,,,,
335,sequential,0,,336,,,,
336,sequential,1,continue ;,,,,,
337,sequential,1,},338,,,,
338,conditional check,1,if (choice == 8),,339,361,,
339,sequential,1,"int walls=0, empt=0 ;",340,,,,
340,loop check,1,for (i=0 ;i<rows ;i++),,341,,,
341,sequential,0,,342,,,,
342,loop check,1,for (j=0 ;j<cols ;j++),,343,,,
343,sequential,0,,344,,,,
344,conditional check,1,if (maze[i][j]=='#'),,345,346,,
345,sequential,1,walls++ ;,346,,,,
346,sequential,0,,347,,,,
347,else branch,1,else,348,,,,
348,sequential,1,empt++ ;,349,,,,
349,sequential,0,,350,,,342,
350,sequential,0,,351,,,340,
351,sequential,1,"printf(""Cells %d walls %d empty %d density %.3f\n"", rows*cols, walls, empt, (double)walls/(rows*cols)) ;",352,,,,
352,loop check,1,for (i=0 ;i<rows ;i++),,353,,,
353,sequential,0,,354,,,,
354,loop check,1,for (j=0 ;j<cols ;j++),,355,,,
355,sequential,1,visited[i][j]=0 ;,356,,,354,
356,sequential,0,,357,,,352,
357,sequential,6,"int qR[10000], qC[10000], h=0, t=0 ; | qR[t]=startR ; | qC[t]=startC ; | t++ ; | visited[startR][startC]=1 ; | int reach=0 ;",358,,,,
358,loop check,1,while (h<t),,359,,,
359,sequential,6,"int cr=qR[h], cc=qC[h] ; | h++ ; | reach++ ; | int dr[4]= | { | 1,-1,0,0",360,,,358,
360,sequential,3,", dc[4]= | { | 0,0,1,-1",361,,,,
361,sequential,1,;,362,,,,
362,loop check,1,for (k=0 ;k<4 ;k++),,363,,,
363,sequential,1,"int nr=cr+dr[k], nc=cc+dc[k] ;",364,,,,
364,conditional check,1,if (nr<=0||nc<=0||nr>=rows-1||nc>=cols-1),,365,368,,
365,sequential,0,,366,,,,
366,sequential,1,continue ;,,,,362,
367,sequential,0,,368,,,,
368,sequential,0,,369,,,,
369,conditional check,1,if (maze[nr][nc]=='#'),,370,373,,
370,sequential,0,,371,,,,
371,sequential,1,continue ;,,,,362,
372,sequential,0,,373,,,,
373,sequential,0,,374,,,,
374,conditional check,1,if (visited[nr][nc]),,375,378,,
375,sequential,0,,376,,,,
376,sequential,1,continue ;,,,,362,
377,sequential,0,,378,,,,
378,sequential,4,visited[nr][nc]=1 ; | qR[t]=nr ; | qC[t]=nc ; | t++ ;,379,,,362,
379,sequential,2,"} | printf(""Reachable from S: %d\n"", reach) ;",380,,,,
380,loop check,1,for (i=0 ;i<rows ;i++),,381,,,
381,sequential,0,,382,,,,
382,loop check,1,for (j=0 ;j<cols ;j++),,383,,,
383,sequential,1,visited[i][j]=0 ;,384,,,382,
384,sequential,0,,385,,,380,
385,sequential,7,"int stkR[10000], stkC[10000], it[10000], sp=-1, maxD=0, depth=0 ; | sp++ ; | stkR[sp]=startR ; | stkC[sp]=startC ; | it[sp]=0 ; | visited[startR][startC]=1 ; | depth=1 ;",386,,,,
386,loop check,1,while (sp>=0),,387,,,
387,sequential,1,"int cr=stkR[sp], cc=stkC[sp], itv=it[sp] ;",388,,,,
388,conditional check,1,if (itv>3),,389,392,,
389,sequential,2,sp-- ; | depth-- ;,390,,,,
390,sequential,1,continue ;,,,,386,
391,sequential,0,,392,,,,
392,sequential,4,"it[sp] = itv+1 ; | int dr[4]= | { | 1,-1,0,0",393,,,386,
393,sequential,6,", dc[4]= | { | 0,0,1,-1 | } | ; | int nr=cr+dr[itv], nc=cc+dc[itv] ;",394,,,,
394,conditional check,1,if (nr<=0||nc<=0||nr>=rows-1||nc>=cols-1),,395,398,,
395,sequential,0,,396,,,,
396,sequential,1,continue ;,,,,,
397,sequential,0,,398,,,,
398,sequential,0,,399,,,,
399,conditional check,1,if (maze[nr][nc]=='#'),,400,403,,
400,sequential,0,,401,,,,
401,sequential,1,continue ;,,,,,
402,sequential,0,,403,,,,
403,sequential,0,,404,,,,
404,conditional check,1,if (visited[nr][nc]),,405,408,,
405,sequential,0,,406,,,,
406,sequential,1,continue ;,,,,,
407,sequential,0,,408,,,,
408,sequential,6,visited[nr][nc]=1 ; | sp++ ; | stkR[sp]=nr ; | stkC[sp]=nc ; | it[sp]=0 ; | depth++ ;,409,,,,
409,conditional check,1,if (depth>maxD),,410,411,,
410,sequential,1,maxD=depth ;,411,,,,
411,sequential,2,"} | printf(""Heuristic max depth: %d\n"", maxD) ;",412,,,,
412,sequential,1,continue ;,,,,,
413,sequential,1,},414,,,,
414,conditional check,1,if (choice == 9),,415,440,,
415,sequential,2,"int nr, nc ; | printf(""New rows cols (10..%d): "", MAXR-1) ;",416,,,,
416,conditional check,1,"if (scanf(""%d %d"",&nr,&nc)!=2)",,417,420,,
417,sequential,1,"printf(""Bad\n"") ;",418,,,,
418,sequential,1,continue ;,,,,,
419,sequential,0,,420,,,,
420,sequential,0,,421,,,,
421,conditional check,1,if (nr<10||nc<10||nr>MAXR||nc>MAXC),,422,425,,
422,sequential,1,"printf(""Out of range\n"") ;",423,,,,
423,sequential,1,continue ;,,,,,
424,sequential,0,,425,,,,
425,sequential,6,rows=nr ; | cols=nc ; | startR=1 ; | startC=1 ; | endR=rows-2 ; | endC=cols-2 ;,426,,,,
426,loop check,1,for (i=0 ;i<rows ;i++),,427,,,
427,sequential,0,,428,,,,
428,loop check,1,for (j=0 ;j<cols ;j++),,429,,,
429,sequential,0,,430,,,,
430,conditional check,1,if (i==0||j==0||i==rows-1||j==cols-1),,431,432,,
431,sequential,1,maze[i][j]='#' ;,432,,,,
432,sequential,0,,433,,,,
433,else branch,1,else,434,,,,
434,sequential,2,maze[i][j] = ((rand()%100) < 35) ? '#' : | '.' ;,435,,,,
435,sequential,3,visited[i][j]=0 ; | parentR[i][j]=-1 ; | parentC[i][j]=-1 ;,436,,,428,
436,sequential,0,,437,,,426,
437,sequential,3,"maze[startR][startC]='S' ; | maze[endR][endC]='E' ; | printf(""Resized to %d x %d\n"", rows, cols) ;",438,,,,
438,sequential,1,continue ;,,,,,
439,sequential,0,,440,,,,
440,sequential,2,"printf(""Invalid option\n"") ; | }",441,,,,
441,sequential,1,Exit,,,,,
