ID,type,statement_count,statements,sequential_edges,true_edges,false_edges,back_edges,break_edges
0,sequential,1,Entry,1,,,,
1,sequential,7,"int n, choice = -1, i, j, temp, key, k, repeat ; | int arr[100] ; | srand(time(NULL)) ; | printf(""Enter number of elements (max 100): "") ; | scanf(""%d"", &n) ; | printf(""Choose input method:\n1. Enter manually\n2. Generate randomly\n"") ; | scanf(""%d"", &choice) ;",2,,,,
2,conditional check,1,if (choice == 1),,3,7,,
3,sequential,0,,4,,,,
4,loop check,1,for (i = 0 ;i < n ;i++),,5,,,
5,sequential,2,"printf(""Enter element %d: "", i + 1) ; | scanf(""%d"", &arr[i]) ;",6,,,4,
6,sequential,0,,7,,,,
7,sequential,0,,8,,,,
8,else branch,1,else,9,,,,
9,sequential,0,,10,,,,
10,loop check,1,for (i = 0 ;i < n ;i++),,11,,,
11,sequential,1,arr[i] = rand() % 1000 ;,12,,,10,
12,sequential,1,"printf(""Random array generated:\n"") ;",13,,,,
13,loop check,1,for (i = 0 ;i < n ;i++),,14,,,
14,sequential,1,"printf(""%d "", arr[i]) ;",15,,,13,
15,sequential,1,"printf(""\n"") ;",16,,,,
16,sequential,1,choice = -1 ;,17,,,,
17,loop check,1,while (choice != 0),,18,,,
18,sequential,15,"printf(""\n=== Sorting & Searching Suite ===\n"") ; | printf(""1. Bubble Sort\n"") ; | printf(""2. Insertion Sort\n"") ; | printf(""3. Merge Sort\n"") ; | printf(""4. Quick Sort\n"") ; | printf(""5. Linear Search\n"") ; | printf(""6. Binary Search\n"") ; | printf(""7. Print Array\n"") ; | printf(""8. Count Inversions\n"") ; | printf(""9. Find kth Largest / Smallest\n"") ; | printf(""10. Reverse Array\n"") ; | printf(""11. Shuffle Array\n"") ; | printf(""0. Exit\n"") ; | printf(""Enter choice: "") ; | scanf(""%d"", &choice) ;",19,,,,
19,conditional check,1,if (choice == 1),,20,30,,
20,sequential,0,,21,,,,
21,loop check,1,for (i = 0 ;i < n - 1 ;i++),,22,,,
22,sequential,0,,23,,,,
23,loop check,1,for (j = 0 ;j < n - i - 1 ;j++),,24,,,
24,sequential,0,,25,,,,
25,conditional check,1,if (arr[j] > arr[j + 1]),,26,27,,
26,sequential,3,temp = arr[j] ; | arr[j] = arr[j + 1] ; | arr[j + 1] = temp ;,27,,,,
27,sequential,0,,28,,,23,
28,sequential,0,,29,,,21,
29,sequential,1,"printf(""Array sorted using Bubble Sort.\n"") ;",30,,,,
30,sequential,0,,31,,,,
31,conditional check,1,else if (choice == 2),,32,39,,
32,sequential,0,,33,,,,
33,loop check,1,for (i = 1 ;i < n ;i++),,34,,,
34,sequential,2,temp = arr[i] ; | j = i - 1 ;,35,,,,
35,loop check,1,while (j >= 0 && arr[j] > temp),,36,,,
36,sequential,2,arr[j + 1] = arr[j] ; | j-- ;,37,,,35,
37,sequential,1,arr[j + 1] = temp ;,38,,,33,
38,sequential,1,"printf(""Array sorted using Insertion Sort.\n"") ;",39,,,,
39,sequential,0,,40,,,,
40,conditional check,1,else if (choice == 3),,41,72,,
41,sequential,2,"int width, left, right, mid, l, r ; | int temp_arr[100] ;",42,,,,
42,loop check,1,for (width = 1 ;width < n ;width *= 2),,43,,,
43,sequential,0,,44,,,,
44,loop check,1,for (i = 0 ;i < n ;i += 2 * width),,45,,,
45,sequential,3,left = i ; | mid = i + width - 1 ; | right = i + 2 * width - 1 ;,46,,,,
46,conditional check,1,if (mid >= n),,47,48,,
47,sequential,1,mid = n - 1 ;,48,,,,
48,sequential,0,,49,,,,
49,conditional check,1,if (right >= n),,50,51,,
50,sequential,1,right = n - 1 ;,51,,,,
51,sequential,3,l = left ; | r = mid + 1 ; | j = left ;,52,,,,
52,loop check,1,while (l <= mid && r <= right),,53,,,
53,sequential,0,,54,,,,
54,conditional check,1,if (arr[l] <= arr[r]),,55,56,,
55,sequential,1,temp_arr[j++] = arr[l++] ;,56,,,,
56,sequential,0,,57,,,,
57,else branch,1,else,58,,,,
58,sequential,1,temp_arr[j++] = arr[r++] ;,59,,,,
59,sequential,0,,60,,,52,
60,sequential,0,,61,,,,
61,loop check,1,while (l <= mid),,62,,,
62,sequential,1,temp_arr[j++] = arr[l++] ;,63,,,61,
63,sequential,0,,64,,,,
64,loop check,1,while (r <= right),,65,,,
65,sequential,1,temp_arr[j++] = arr[r++] ;,66,,,64,
66,sequential,0,,67,,,,
67,loop check,1,for (j = left ;j <= right ;j++),,68,,,
68,sequential,1,arr[j] = temp_arr[j] ;,69,,,67,
69,sequential,0,,70,,,44,
70,sequential,0,,71,,,42,
71,sequential,1,"printf(""Array sorted using Merge Sort.\n"") ;",72,,,,
72,sequential,0,,73,,,,
73,conditional check,1,else if (choice == 4),,74,90,,
74,sequential,3,"int stack[100], top = -1, low, high, pivot, p ; | stack[++top] = 0 ; | stack[++top] = n - 1 ;",75,,,,
75,loop check,1,while (top >= 0),,76,,,
76,sequential,4,high = stack[top--] ; | low = stack[top--] ; | pivot = arr[high] ; | i = low - 1 ;,77,,,,
77,loop check,1,for (j = low ;j <= high - 1 ;j++),,78,,,
78,sequential,0,,79,,,,
79,conditional check,1,if (arr[j] < pivot),,80,81,,
80,sequential,4,i++ ; | temp = arr[i] ; | arr[i] = arr[j] ; | arr[j] = temp ;,81,,,,
81,sequential,0,,82,,,77,
82,sequential,4,temp = arr[i + 1] ; | arr[i + 1] = arr[high] ; | arr[high] = temp ; | p = i + 1 ;,83,,,,
83,conditional check,1,if (p - 1 > low),,84,85,,
84,sequential,2,stack[++top] = low ; | stack[++top] = p - 1 ;,85,,,,
85,sequential,0,,86,,,,
86,conditional check,1,if (p + 1 < high),,87,88,,
87,sequential,2,stack[++top] = p + 1 ; | stack[++top] = high ;,88,,,,
88,sequential,0,,89,,,75,
89,sequential,1,"printf(""Array sorted using Quick Sort.\n"") ;",90,,,,
90,sequential,0,,91,,,,
91,conditional check,1,else if (choice == 5),,92,107,,
92,sequential,3,"printf(""Enter key to search: "") ; | scanf(""%d"", &key) ; | int found = 0 ;",93,,,,
93,loop check,1,for (i = 0 ;i < n ;i++),,94,,,
94,sequential,0,,95,,,,
95,conditional check,1,if (arr[i] == key),,96,99,,
96,sequential,1,found = 1 ;,97,,,,
97,sequential,1,break ;,,,,,100
98,sequential,0,,99,,,,
99,sequential,0,,100,,,93,
100,sequential,0,,101,,,,
101,conditional check,1,if (found),,102,103,,
102,sequential,1,"printf(""Key %d found at index %d.\n"", key, i) ;",103,,,,
103,sequential,0,,104,,,,
104,else branch,1,else,105,,,,
105,sequential,1,"printf(""Key %d not found.\n"", key) ;",106,,,,
106,sequential,0,,107,,,,
107,sequential,0,,108,,,,
108,conditional check,1,else if (choice == 6),,109,130,,
109,sequential,3,"printf(""Enter key to search: "") ; | scanf(""%d"", &key) ; | int left = 0, right = n - 1, found = 0, mid ;",110,,,,
110,loop check,1,while (left <= right),,111,,,
111,sequential,1,mid = (left + right) / 2 ;,112,,,,
112,conditional check,1,if (arr[mid] == key),,113,116,,
113,sequential,1,found = 1 ;,114,,,,
114,sequential,1,break ;,,,,,123
115,sequential,0,,116,,,,
116,sequential,0,,117,,,,
117,conditional check,1,else if (arr[mid] < key),,118,119,,
118,sequential,1,left = mid + 1 ;,119,,,,
119,sequential,0,,120,,,,
120,else branch,1,else,121,,,,
121,sequential,1,right = mid - 1 ;,122,,,,
122,sequential,0,,123,,,110,
123,sequential,0,,124,,,,
124,conditional check,1,if (found),,125,126,,
125,sequential,1,"printf(""Key %d found at index %d.\n"", key, mid) ;",126,,,,
126,sequential,0,,127,,,,
127,else branch,1,else,128,,,,
128,sequential,1,"printf(""Key %d not found.\n"", key) ;",129,,,,
129,sequential,0,,130,,,,
130,sequential,0,,131,,,,
131,conditional check,1,else if (choice == 7),,132,136,,
132,sequential,1,"printf(""Array: "") ;",133,,,,
133,loop check,1,for (i = 0 ;i < n ;i++),,134,,,
134,sequential,1,"printf(""%d "", arr[i]) ;",135,,,133,
135,sequential,1,"printf(""\n"") ;",136,,,,
136,sequential,0,,137,,,,
137,conditional check,1,else if (choice == 8),,138,148,,
138,sequential,1,int inv = 0 ;,139,,,,
139,loop check,1,for (i = 0 ;i < n ;i++),,140,,,
140,sequential,0,,141,,,,
141,loop check,1,for (j = i + 1 ;j < n ;j++),,142,,,
142,sequential,0,,143,,,,
143,conditional check,1,if (arr[i] > arr[j]),,144,145,,
144,sequential,1,inv++ ;,145,,,,
145,sequential,0,,146,,,141,
146,sequential,0,,147,,,139,
147,sequential,1,"printf(""Number of inversions: %d\n"", inv) ;",148,,,,
148,sequential,0,,149,,,,
149,conditional check,1,else if (choice == 9),,150,169,,
150,sequential,1,int temp_arr[100] ;,151,,,,
151,loop check,1,for (i = 0 ;i < n ;i++),,152,,,
152,sequential,1,temp_arr[i] = arr[i] ;,153,,,151,
153,sequential,0,,154,,,,
154,loop check,1,for (i = 0 ;i < n - 1 ;i++),,155,,,
155,sequential,0,,156,,,,
156,loop check,1,for (j = 0 ;j < n - i - 1 ;j++),,157,,,
157,sequential,0,,158,,,,
158,conditional check,1,if (temp_arr[j] > temp_arr[j + 1]),,159,160,,
159,sequential,3,temp = temp_arr[j] ; | temp_arr[j] = temp_arr[j + 1] ; | temp_arr[j + 1] = temp ;,160,,,,
160,sequential,0,,161,,,156,
161,sequential,0,,162,,,154,
162,sequential,2,"printf(""Enter k (1-%d): "", n) ; | scanf(""%d"", &k) ;",163,,,,
163,conditional check,1,if (k >= 1 && k <= n),,164,165,,
164,sequential,1,"printf(""k-th smallest: %d, k-th largest: %d\n"", temp_arr[k - 1], temp_arr[n - k]) ;",165,,,,
165,sequential,0,,166,,,,
166,else branch,1,else,167,,,,
167,sequential,1,"printf(""Invalid k.\n"") ;",168,,,,
168,sequential,0,,169,,,,
169,sequential,0,,170,,,,
170,conditional check,1,else if (choice == 10),,171,175,,
171,sequential,0,,172,,,,
172,loop check,1,for (i = 0 ;i < n / 2 ;i++),,173,,,
173,sequential,3,temp = arr[i] ; | arr[i] = arr[n - i - 1] ; | arr[n - i - 1] = temp ;,174,,,172,
174,sequential,1,"printf(""Array reversed.\n"") ;",175,,,,
175,sequential,0,,176,,,,
176,conditional check,1,else if (choice == 11),,177,181,,
177,sequential,0,,178,,,,
178,loop check,1,for (i = n - 1 ;i > 0 ;i--),,179,,,
179,sequential,4,j = rand() % (i + 1) ; | temp = arr[i] ; | arr[i] = arr[j] ; | arr[j] = temp ;,180,,,178,
180,sequential,1,"printf(""Array shuffled.\n"") ;",181,,,,
181,sequential,0,,182,,,,
182,conditional check,1,else if (choice != 0),,183,184,,
183,sequential,1,"printf(""Invalid option. Try again.\n"") ;",184,,,,
184,sequential,0,,185,,,17,
185,sequential,1,"printf(""Final Array:\n"") ;",186,,,,
186,loop check,1,for (i = 0 ;i < n ;i++),,187,,,
187,sequential,1,"printf(""%d "", arr[i]) ;",188,,,186,
188,sequential,2,"printf(""\nExiting program.\n"") ; | printf(""Final Array:\n"") ;",189,,,,
189,loop check,1,for (i = 0 ;i < n ;i++),,190,,,
190,sequential,1,"printf(""%d "", arr[i]) ;",191,,,189,
191,sequential,2,"printf(""\n"") ; | int sum = 0, min = arr[0], max = arr[0] ;",192,,,,
192,loop check,1,for (i = 0 ;i < n ;i++),,193,,,
193,sequential,1,sum += arr[i] ;,194,,,,
194,conditional check,1,if (arr[i] < min),,195,196,,
195,sequential,1,min = arr[i] ;,196,,,,
196,sequential,0,,197,,,,
197,conditional check,1,if (arr[i] > max),,198,199,,
198,sequential,1,max = arr[i] ;,199,,,,
199,sequential,0,,200,,,192,
200,sequential,6,"printf(""Array Statistics:\n"") ; | printf(""Sum: %d\n"", sum) ; | printf(""Average: %.2f\n"", sum / (float)n) ; | printf(""Min: %d, Max: %d\n"", min, max) ; | printf(""Do you want to run another array? Enter 1 for yes, 0 for no: "") ; | scanf(""%d"", &repeat) ;",201,,,,
201,conditional check,1,if (repeat == 1),,202,203,,
202,sequential,1,"printf(""Restart the program to input a new array.\n"") ;",203,,,,
203,sequential,1,"printf(""Exiting program.\n"") ;",204,,,,
204,sequential,1,Exit,,,,,
